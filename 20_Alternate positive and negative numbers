# Method 1: TC:O(n), SC: O(n), order matters


#include <bits/stdc++.h>
using namespace std;

class Solution{
public:

	void rearrange(int arr[], int n) {
	    int i,j,l,size1,size2;
	    vector<int> positive;
	    vector<int> negative;
	    for(i=0;i<n;i++)
	    {
	        if(arr[i]>=0)
	        positive.push_back(arr[i]);
	        else
	        negative.push_back(arr[i]);
	    }
	    size1=positive.size();
	    size2=negative.size();
	    i=0,j=0,l=0;
	    while(i<size1 && j<size2)
	    {
	        arr[l]=positive[i];
	        i++;
	        l++;
	        
	        arr[l]=negative[j];
	        j++;
	        l++;
	    }
	    while(i<size1)
	    {
	        arr[l]=positive[i];
	        i++;
	        l++;
	    }
	    while(j<size2)
	    {
	        arr[l]=negative[j];
	        j++;
	        l++;
	    }
	}
};

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n, i;
        cin >> n;
        int arr[n];
        for (i = 0; i < n; i++) {
            cin >> arr[i];
        }
        Solution ob;
        ob.rearrange(arr, n);
        for (i = 0; i < n; i++) {
            cout << arr[i] << " ";
        }
        cout << "\n";
    }
    return 0;
}



# Method 2: SC:O(1), order matters, TC:O(n* No. of times right rotation)


# include<iostream>
using namespace std;
#include <bits/stdc++.h>
void right_rotate(int arr[],int from, int to);

int main()
{
    int n,i,arr[20],wrongindex=-1;
    cout<<"Enter n: ";
    cin>>n;
    cout<<"Enter array elements: ";
    for(i=0;i<n;i++)
    cin>>arr[i];
    for(i=0;i<n;i++)
	    {
	       if(wrongindex!=-1)
	       {
	           if((arr[wrongindex]>=0 && arr[i]<0) || (arr[wrongindex]<0 && arr[i]>=0))
	           {
	           right_rotate(arr,wrongindex,i);
	           if((i-wrongindex)>=2)
	           wrongindex+=2;
	           else
	           wrongindex=-1;
	           }
	           
	       }
	       else
	       {
	           if((arr[i]>=0 && i%2!=0) || (arr[i]<0 && i%2==0))
	           wrongindex=i;
	       }
	    }
	    cout<<"Print array: ";
	    for(i=0;i<n;i++)
        cout<<arr[i]<<" ";
	}
void right_rotate(int arr[],int from, int to)
	{
	    int temp=arr[to],i;
	    for(i=to;i>from;i--)
	    {
	        arr[i]=arr[i-1];
	        
	    }
	    arr[from]=temp;
	}
